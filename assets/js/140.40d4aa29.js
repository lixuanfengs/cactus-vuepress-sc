(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{491:function(t,o,r){"use strict";r.r(o);var a=r(0),_=Object(a.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"模块分包"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#模块分包"}},[t._v("#")]),t._v(" 模块分包")]),t._v(" "),o("p",[t._v("以下内容来自官方文档：https://dubbo.apache.org/zh/docs/v2.7/dev/design/ 。")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://dubbo.apache.org/imgs/dev/dubbo-modules.jpg",alt:"img"}})]),t._v(" "),o("p",[t._v("模块说明：")]),t._v(" "),o("ul",[o("li",[o("strong",[t._v("dubbo-common 公共逻辑模块")]),t._v("：包括 Util 类和通用模型。")]),t._v(" "),o("li",[o("strong",[t._v("dubbo-remoting 远程通讯模块")]),t._v("：相当于 Dubbo 协议的实现，如果 RPC 用 RMI协议则不需要使用此包。")]),t._v(" "),o("li",[o("strong",[t._v("dubbo-rpc 远程调用模块")]),t._v("：抽象各种协议，以及动态代理，只包含一对一的调用，不关心集群的管理。")]),t._v(" "),o("li",[o("strong",[t._v("dubbo-cluster 集群模块")]),t._v("：将多个服务提供方伪装为一个提供方，包括：负载均衡, 容错，路由等，集群的地址列表可以是静态配置的，也可以是由注册中心下发。")]),t._v(" "),o("li",[o("strong",[t._v("dubbo-registry 注册中心模块")]),t._v("：基于注册中心下发地址的集群方式，以及对各种注册中心的抽象。")]),t._v(" "),o("li",[o("strong",[t._v("dubbo-monitor 监控模块")]),t._v("：统计服务调用次数，调用时间的，调用链跟踪的服务。")]),t._v(" "),o("li",[o("strong",[t._v("dubbo-config 配置模块")]),t._v("：是 Dubbo 对外的 API，用户通过 Config 使用Dubbo，隐藏 Dubbo 所有细节。")]),t._v(" "),o("li",[o("strong",[t._v("dubbo-container 容器模块")]),t._v("：是一个 Standlone 的容器，以简单的 Main 加载 Spring 启动，因为服务通常不需要 Tomcat/JBoss 等 Web 容器的特性，没必要用 Web 容器去加载服务。")])]),t._v(" "),o("h2",{attrs:{id:"前言"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),o("p",[t._v("在"),o("a",{attrs:{href:"https://www.yuque.com/docs/share/99f80c82-223a-4ff3-b73d-0d55a8d16125",target:"_blank",rel:"noopener noreferrer"}},[t._v("《如何自己实现一个 RPC框架》"),o("OutboundLink")],1),t._v("中我们介绍到一个最基本的 RPC 框架应该包括下面几部分:")]),t._v(" "),o("ol",[o("li",[o("strong",[t._v("注册中心")]),t._v(" ：注册中心负责服务地址的注册与查找，相当于目录服务。")]),t._v(" "),o("li",[o("strong",[t._v("网络传输")]),t._v(" ：既然我们要调用远程的方法，就要发送网络请求来传递目标类和方法的信息以及方法的参数等数据到服务提供端。")]),t._v(" "),o("li",[o("strong",[t._v("序列化和反序列化")]),t._v(" ：要在网络传输数据就要涉及到"),o("strong",[t._v("序列化")]),t._v("。")]),t._v(" "),o("li",[o("strong",[t._v("动态代理")]),t._v(" ：屏蔽程方法调用的底层细节。")]),t._v(" "),o("li",[o("strong",[t._v("负载均衡")]),t._v("  ： 避免单个服务器响应同一请求，容易造成服务器宕机、崩溃等问题。")]),t._v(" "),o("li",[o("strong",[t._v("传输协议")]),t._v(" ：这个协议是客户端（服务消费方）和服务端（服务提供方）交流的基础。")])]),t._v(" "),o("p",[t._v("更完善的一点的 RPC 框架可能还有监控模块。")]),t._v(" "),o("p",[t._v("Dubbo 是比较成熟的 RPC 框架了，它当然满足我们所说的这些要求，我们看一下 Dubbo 源码的模块结构就可以看出来了。")]),t._v(" "),o("h2",{attrs:{id:"dubbo-核心模块介绍"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-核心模块介绍"}},[t._v("#")]),t._v(" Dubbo 核心模块介绍")]),t._v(" "),o("h3",{attrs:{id:"dubbo-common-公共逻辑模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-common-公共逻辑模块"}},[t._v("#")]),t._v(" dubbo-common(公共逻辑模块)")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816012541-cf75aecf-f227-4350-b3df-fb4f701ee691.png",alt:"img"}})]),t._v(" "),o("p",[t._v("这部分主要是一些通用工具类（Util）比如Dubbo 对 SPI（"),o("code",[t._v("org.apache.dubbo.common.extension")]),t._v("）、时间轮算法("),o("code",[t._v("org.apache.dubbo.common.timer")]),t._v(")的实现都放在这个模块下。")]),t._v(" "),o("p",[t._v("除了工具类之外，"),o("code",[t._v("dubbo-common")]),t._v(" 还包括一些通用模型比如 URL（Dubbo 通过URL 传递配置信息）。")]),t._v(" "),o("h3",{attrs:{id:"dubbo-remoting-网络传输模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-remoting-网络传输模块"}},[t._v("#")]),t._v(" dubbo-remoting (网络传输模块)")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816042601-c4cdaeae-4a22-4c73-ad27-27f2fb25fb53.png",alt:"img"}})]),t._v(" "),o("p",[t._v("想要调用远程方法，必然涉及到网络传输。网络传输模块很大程度决定了Dubbo的性能和稳定性，所以，这块的设计非常重要。")]),t._v(" "),o("p",[o("code",[t._v("dubbo-remoting-api")]),t._v(" 模块是整个网络传输模块的抽象，定义了一些网络传输模块必须要实现的接口以及通用的一些实现，"),o("code",[t._v("dubbo-remoting")]),t._v(" 模块下的其他模块都要对其进行实现。")]),t._v(" "),o("p",[t._v("从上图可以看出，Dubbo 的网络传输模块有多种实现方式。除了我们比较熟悉的 Netty 实现方式之外，还有Grizzly、Mina等实现方式。")]),t._v(" "),o("p",[t._v("Netty、Grizzly、Mina三者都是基于 Java NIO，并且Netty相比于其他两者封装和设计的要更好一些。")]),t._v(" "),o("h3",{attrs:{id:"dubbo-registry-注册中心模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-registry-注册中心模块"}},[t._v("#")]),t._v(" dubbo-registry (注册中心模块)")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816023791-b29fb72c-a393-48c9-b86e-33fc999b46e3.png",alt:"img"}})]),t._v(" "),o("p",[t._v("注册中心相当于服务提供者和消费者中间的桥梁，负责服务地址的注册与查找，相当于目录服务。")]),t._v(" "),o("p",[o("code",[t._v("dubbo-registry-api")]),t._v(" 模块是整个注册中心传输模块的抽象，定义了一些注册中心模块必须要实现的接口以及通用的一些实现。")]),t._v(" "),o("p",[t._v("Dubbo 的注册中心输模块也有多种实现方式。除了我们比较熟悉的 zookeeper、nacos 实现方式之外，还有mutilcast、redis等实现方式。")]),t._v(" "),o("p",[t._v("一般情况下，我们都是使用zookeeper作为注册中心，这也是 Dubbo 官方推荐的一种方式。")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816247934-3e7f9bd4-30ad-480e-a274-36695476cf0c.png",alt:"img"}})]),t._v(" "),o("h3",{attrs:{id:"dubbo-config-配置模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-config-配置模块"}},[t._v("#")]),t._v(" dubbo-config(配置模块)")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816052762-7d13c795-7a03-4e9f-8ea5-41e70e1c582f.png",alt:"img"}})]),t._v(" "),o("p",[t._v("我们在源码环境那一节中提到： "),o("code",[t._v("dubbo-demo")]),t._v(" 模块下，包含了 3 种不同类型（xml、api、annotation）配置方式使用 Dubbo 的demo。")]),t._v(" "),o("p",[o("code",[t._v("dubbo-config")]),t._v("  就是对这些配置方式的实现。")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("dubbo-config-api")]),t._v(" ：API配置方式的实现（纯代码使用）。")]),t._v(" "),o("li",[o("code",[t._v("dubbo-config-spring")]),t._v(" ：XML和注解方式的实现。")])]),t._v(" "),o("h3",{attrs:{id:""}},[o("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816073523-fadac93a-893d-44e7-9422-bbd28ece4ad6.png",alt:"img"}})]),t._v(" "),o("h3",{attrs:{id:"dubbo-monitor-监控模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-monitor-监控模块"}},[t._v("#")]),t._v(" dubbo-monitor (监控模块)")]),t._v(" "),o("p",[t._v("监控模块主要统计服务调用次数，调用时间的，调用链跟踪的服务。")]),t._v(" "),o("p",[t._v("从上图可以看出，监控模块只有一个默认实现。")]),t._v(" "),o("h3",{attrs:{id:"dubbo-rpc-远程调用模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-rpc-远程调用模块"}},[t._v("#")]),t._v(" dubbo-rpc(远程调用模块)")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816082741-29cd5475-30c0-49d3-be2a-6505990cbade.png",alt:"img"}})]),t._v(" "),o("p",[o("code",[t._v("dubbo-rpc")]),t._v(" 模块抽象了各种协议，以及动态代理，只包含一对一的调用，不关心集群的管理。")]),t._v(" "),o("p",[t._v("从“远程调用模块” 这个名字中，我们大概就能推断出 "),o("code",[t._v("dubbo-rpc")]),t._v(" 模块依赖了网络传输模块（"),o("code",[t._v("dubbo-remoting")]),t._v("）。")]),t._v(" "),o("p",[o("code",[t._v("dubbo-rpc-api")]),t._v(" 模块是整个远程调用模块的抽象，定义了一些远程调用模块必须要实现的接口以及通用的一些实现。")]),t._v(" "),o("p",[t._v("Dubbo 本身就提供了多种协议实现比如 dubbo协议、hession协议、gRPC协议，不过官方更推荐使用dubbo协议。并且，还给出了一份"),o("a",{attrs:{href:"https://dubbo.apache.org/zh/docs/v2.7/user/references/protocol/",target:"_blank",rel:"noopener noreferrer"}},[t._v("性能测试报告"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816227981-b065f6b3-cae9-4de8-9c67-ef1157ac7409.png",alt:"img"}})]),t._v(" "),o("h3",{attrs:{id:"dubbo-cluster-集群模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-cluster-集群模块"}},[t._v("#")]),t._v(" dubbo-cluster(集群模块)")]),t._v(" "),o("p",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637816090030-5c58140f-382b-4743-af04-b2d10f00661d.png",alt:"img"}})]),t._v(" "),o("p",[o("code",[t._v("dubbo-cluster")]),t._v(" 模块将多个服务提供方伪装为一个提供方，包括：负载均衡, 容错，路由等，集群的地址列表可以是静态配置的，也可以是由注册中心下发。")]),t._v(" "),o("p",[t._v("2 人点赞")]),t._v(" "),o("ul",[o("li",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/png/738439/1637027063838-avatar/1d56ac48-ee3f-4d1c-928c-a5bc951232eb.png?x-oss-process=image%2Fresize%2Cm_fill%2Cw_64%2Ch_64%2Fformat%2Cpng",alt:"SnailClimb"}})]),t._v(" "),o("li",[o("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2022/jpeg/21572765/1647602738256-avatar/effa5308-11fb-44d5-8191-601e78deca0e.jpeg?x-oss-process=image%2Fresize%2Cm_fill%2Cw_64%2Ch_64%2Fformat%2Cpng",alt:"菜卷"}})])]),t._v(" "),o("p",[t._v("2")])])}),[],!1,null,null,null);o.default=_.exports}}]);