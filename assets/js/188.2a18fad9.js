(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{538:function(t,v,_){"use strict";_.r(v);var a=_(0),e=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"前言-网关是是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言-网关是是什么"}},[t._v("#")]),t._v(" 前言：网关是是什么？")]),t._v(" "),v("p",[t._v("在计算机网络领域，网关（Gateway）是一种服务器，其主要职责是转发其他服务器之间的通信数据。当接收来自客户端的请求时，网关会像资源源服务器一样对请求进行处理。")]),t._v(" "),v("p",[t._v("API网关则是针对传统庞大的单体应用拆分为众多微服务后引入的统一通信管理系统。其作用是充当外部HTTP请求与内部RPC服务之间的流量入口，实现外部请求的协议转换、参数校验、鉴权、切流、熔断、限流、监控、风控等各种通用服务的统一管理。")]),t._v(" "),v("p",[t._v("🤔 那么它是一个什么样的项目呢？为什么会有它的存在？它是怎么设计实现的呢？都用到了哪些技术栈呢？")]),t._v(" "),v("h2",{attrs:{id:"为要做网关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为要做网关"}},[t._v("#")]),t._v(" 为要做网关？")]),t._v(" "),v("p",[t._v("做网关，实际上是创建一个统一解决方案，以应对分布式微服务中RPC到HTTP通信的通用需求。我们将这些共性需求抽象成通用组件服务，从而降低在开发业务需求场景时处理非业务技术需求的成本。")]),t._v(" "),v("p",[t._v("在没有网关的过去，一种常见的做法是在RPC服务之上再开发相应的Web服务。这些Web服务通常是基于Spring MVC框架的工程，它们调用RPC服务，最终提供HTTP接口，以供H5、Web、小程序、APP等应用使用。如下图所示：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20231012154029505.png",alt:"image-20231012154029505"}})]),t._v(" "),v("p",[t._v("传统WEB服务开发存在以下几个问题：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("问题1：为每个WEB应用分配独立的工程、域名和服务器资源，从申请到部署，这个过程会降低开发效率，并增加维护成本。")])]),t._v(" "),v("li",[v("p",[t._v("问题2：每个WEB应用都会有一系列通用需求，如限流、熔断、降级和切流，为满足这些需求，需要增加代码维护的复杂性和成本。")])]),t._v(" "),v("li",[v("p",[t._v("问题3：在整个WEB应用的生命周期中，需要进行文档维护、工程调试以及联合调试等工作，这类似于重新从头开始每次开发，必然会降低研发效率。")])])]),t._v(" "),v("p",[t._v("因此，总结来看，在微服务架构下，传统开发所面临的一系列问题促使各大公司都积极自研API网关解决方案，包括阿里、腾讯、百度、美团、京东、网易、亚马逊等。这些成熟的API网关解决方案有望降低沟通成本、提高研发效率，以及优化资源利用率。")]),t._v(" "),v("h2",{attrs:{id:"系统架构设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#系统架构设计"}},[t._v("#")]),t._v(" 系统架构设计")]),t._v(" "),v("p",[t._v("如果我们的目标是构建一个支持百亿级吞吐量的网关，那么它必须采用分布式架构的思维，以实现去中心化设计并支持横向扩展。这意味着每个网关服务都应视为一台独立的算力，能够按照权重策略将不同微服务的RPC接口动态分配到不同的算力组中，以实现分布式计算的能力。")]),t._v(" "),v("p",[t._v("此外，在设计和实现上，应将网关的通信模块、管理服务、SDK、注册中心、运营平台等模块进行独立开发，以便进行独立的组合和封装。")]),t._v(" "),v("p",[t._v("这个思路类似于为什么ORM框架在开发时不与Spring强耦合，而是开发为独立的组件。当需要与Spring集成时，再单独开发一个如MyBatis-Spring的整合服务。")]),t._v(" "),v("p",[t._v("因此，在设计网关时，我们应该采取相似的思路，不应该在初始阶段将所有与Netty相关的服务紧密绑定到Spring容器中，因为这会增加维护成本并降低系统的可扩展性。")]),t._v(" "),v("p",[t._v("这种软件架构设计理念在整个网关微服务架构中都会体现，整体架构如下图1-2所示。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/%E7%BD%91%E5%85%B3%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%841.svg",alt:"网关整体架构1"}})]),t._v(" "),v("p",[v("strong",[t._v("API网关")]),t._v("的设计核心内容可以划分为以下五个关键领域：")]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("通信协议处理")]),t._v("（第一块）：这是网关的核心职责，涉及通信协议的处理。在这一领域，借助NIO框架Netty，网关处理HTTP请求，并执行协议转换，以实现泛化调用到RPC服务，并返回相应数据。")]),t._v(" "),v("li",[v("strong",[t._v("注册中心")]),t._v("（第二块）：在这一领域，将网关通信系统视为一个算力，每次部署网关服务，都需要向注册中心注册一个算力。同时，注册中心也要接收RPC接口的注册信息。这一过程可以自动进行基于SDK的扫描注册，也可以需要人工介入管理。一旦RPC注册完成，注册中心会通过AHP权重计算将它们分配给一组网关算力，以供使用。")]),t._v(" "),v("li",[v("strong",[t._v("路由服务")]),t._v('（第三块）：每个Netty通信服务，一旦注册上来，需要与相应的分组网关相关联。例如，对于路由配置，例如"cactus/(a/b/c)/user/..."，需要匹配到Nginx的路由配置中，以确保不同的接口调用请求到相应的Netty服务。重要提醒：如果出现错误或未启动对应服务，可能会导致类似B站的事故。')]),t._v(" "),v("li",[v("strong",[t._v("责任链下插件模块的调用")]),t._v("（第四块）：这一领域包括鉴权、授信、熔断、降级、限流、切量等服务。虽然这些服务不属于网关的核心定义，但由于它们通常是通用的共性服务，因此它们也常被设计、实现和使用于网关层，以确保一致性和维护性。")]),t._v(" "),v("li",[v("strong",[t._v("管理后台")]),t._v("（第五块）：一个完整的网关项目通常都需要一个与之相对应的管理后台。这个管理后台用于用户接口的注册、维护、模拟测试、日志查询、流量整形、网关管理等服务。")])]),t._v(" "),v("p",[t._v("综上系统微服务模块结构如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("序号")]),t._v(" "),v("th",[t._v("系统")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),v("td",[t._v("api-gateway-core")]),t._v(" "),v("td",[t._v("网关核心系统：用于网络通信转换处理，承接http请求，调用RPC服务，责任链模块调用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),v("td",[t._v("api-gateway-admin")]),t._v(" "),v("td",[t._v("网关管理系统：用于网关接口后台管理，注册下线停用控制")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),v("td",[t._v("api-gateway-sdk")]),t._v(" "),v("td",[t._v("网关注册组件：用于注解方式采集接口，发送消息注册接口")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),v("td",[t._v("api-gateway-center")]),t._v(" "),v("td",[t._v("网关注册中心：提供网关注册中心服务，登记网关接口信息")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),v("td",[t._v("api-gateway-test")]),t._v(" "),v("td",[t._v("网关测试工程：提供RPC接口")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);