(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{631:function(s,e,t){"use strict";t.r(e);var a=t(0),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"_0、基础知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0、基础知识"}},[s._v("#")]),s._v(" 0、基础知识")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_01.f6dc9f93.svg",alt:"Kubernetes集群"}})]),s._v(" "),e("p",[s._v("以上展示了一个master（主节点）和6个worker（工作节点）的k8s集群")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run  --name hello-pod alpine  是跑一个容器，容器的粒度有点小")]),s._v("\n\nkubectl run  hello-pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("alpine "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#跑一个Pod。Pod里面其实也是容器")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\nkubectl get pod  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#以前的docker ps -a")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 所有kubectl在master节点运行，把命令请求发给api-server。api-server一系列处理")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##  master只负责调度，而worker node才是真正部署应用的。")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_01_cluster.8f54b2c5.svg",alt:"基础知识"}})]),s._v(" "),e("p",[s._v("docker是每一个worker节点的运行时环境")]),s._v(" "),e("p",[s._v("kubelet负责控制所有容器的启动停止，保证节点工作正常，已经帮助节点交互master")]),s._v(" "),e("p",[s._v("master节点的关键组件：")]),s._v(" "),e("ul",[e("li",[s._v("kubelet（监工）：所有节点必备的。控制这个节点所有pod的生命周期以及与api-server交互等工作")]),s._v(" "),e("li",[s._v("kube-api-server：负责接收所有请求。集群内对集群的任何修改都是通过命令行、ui把请求发给api-server才能执行的。api-server是整个集群操作对内、对外的唯一入口。不包含我们后来部署应用暴露端口的方式")]),s._v(" "),e("li",[s._v("kube-proxy：整个节点的网络流量负责")]),s._v(" "),e("li",[s._v("cri：都有容器运行时环境")])]),s._v(" "),e("p",[s._v("worker节点：")]),s._v(" "),e("ul",[e("li",[s._v("kubelet（监工）：所有节点必备的。控制这个节点所有pod的生命周期以及与api-server交互等工作")]),s._v(" "),e("li",[s._v("kube-proxy：整个节点的网络流量负责")]),s._v(" "),e("li",[s._v("cri：都有容器运行时环境")])]),s._v(" "),e("h2",{attrs:{id:"_1、部署一个应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、部署一个应用"}},[s._v("#")]),s._v(" 1、部署一个应用")]),s._v(" "),e("p",[s._v("创建一次部署工作。(自愈机制)")]),s._v(" "),e("ul",[e("li",[s._v("kubectl create deploy xxxxxx  ：命令行会给api-server发送要部署xxx的请求")]),s._v(" "),e("li",[s._v("api-server把这个请求保存到etcd")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl create 帮我们创建k8s集群中的一些对象")]),s._v("\nkubectl create "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--help")]),s._v("\nkubectl create deployment 这次部署的名字 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("应用的镜像\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Create a deployment named  my-nginx that runs the nginx image")]),s._v("\nkubectl create deployment my-nginx "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##最终在一个机器上有pod、这个pod其实本质里面就是一个容器")]),s._v("\nk8s_nginx_my-nginx-6b74b79f57-snlr4_default_dbeac79e-1ce9-42c9-bc59-c8ca0412674b_0\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### k8s_镜像(nginx)_pod名(my-nginx-6b74b79f57-snlr4)_容器名(default_dbeac79e-1ce9-42c9-bc59-c8ca0412674b_0)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a deployment with command")]),s._v("\nkubectl create deployment my-nginx "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx -- "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a deployment named my-nginx that runs the nginx image with 3 replicas.")]),s._v("\nkubectl create deployment my-nginx "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--replicas")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a deployment named my-nginx that runs the nginx image and expose port 80.")]),s._v("\nkubectl create deployment my-nginx "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("blockquote",[e("p",[e("strong",[s._v("Deployment（部署）")])]),s._v(" "),e("ul",[e("li",[s._v("在k8s中，通过发布 Deployment，可以创建应用程序 (docker image) 的实例 (docker container)，这个实例会被包含在称为 "),e("strong",[s._v("Pod")]),s._v(" 的概念中，"),e("strong",[s._v("Pod")]),s._v(" 是 k8s 中最小可管理单元。")]),s._v(" "),e("li",[s._v("在 k8s 集群中发布 Deployment 后，Deployment 将指示 k8s 如何创建和更新应用程序的实例，master 节点将应用程序实例调度到集群中的具体的节点上。")]),s._v(" "),e("li",[s._v("创建应用程序实例后，Kubernetes Deployment Controller 会持续监控这些实例。如果运行实例的 worker 节点关机或被删除，则 Kubernetes Deployment Controller 将在群集中资源最优的另一个 worker 节点上重新创建一个新的实例。"),e("strong",[s._v("这提供了一种自我修复机制来解决机器故障或维护问题。")])]),s._v(" "),e("li",[s._v("在容器编排之前的时代，各种安装脚本通常用于启动应用程序，但是不能够使应用程序从机器故障中恢复。通过创建应用程序实例并确保它们在集群节点中的运行实例个数，Kubernetes Deployment 提供了一种完全不同的方式来管理应用程序。")]),s._v(" "),e("li",[s._v("Deployment 处于 master 节点上，通过发布 Deployment，master 节点会选择合适的 worker 节点创建 Container（即图中的正方体），Container 会被包含在 Pod （即蓝色圆圈）里。")])])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_02_first_app.svg",alt:"img"}})]),s._v(" "),e("p",[s._v("自愈：针对使用Deployment等部署的应用。")]),s._v(" "),e("p",[s._v("kubectl run ：直接启动一个pod； 不会产生一次部署信息。所以删除就没")]),s._v(" "),e("p",[s._v("kubectl create deploy： "),e("strong",[s._v("启动一个Pod")]),s._v("，以及"),e("strong",[s._v("记录这次部署信息")]),s._v("。所以，这个pod即使挂了，这次部署信息有，就会强制同步到这次部署信息期望的最终结果；kubectl get deploy,pod 都有内容")]),s._v(" "),e("h2",{attrs:{id:"_2、应用程序探索"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、应用程序探索"}},[s._v("#")]),s._v(" 2、应用程序探索")]),s._v(" "),e("ul",[e("li",[s._v("了解Kubernetes Pods（容器组）")]),s._v(" "),e("li",[s._v("了解Kubernetes Nodes（节点）")]),s._v(" "),e("li",[s._v("排查故障")])]),s._v(" "),e("p",[s._v("创建 Deployment 后，k8s创建了一个 "),e("strong",[s._v("Pod（容器组）")]),s._v(" 来放置应用程序实例（container 容器）。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_03_pods.ccc5ba54.svg",alt:"Pod概念"}})]),s._v(" "),e("h3",{attrs:{id:"_1、了解pod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、了解pod"}},[s._v("#")]),s._v(" 1、了解Pod")]),s._v(" "),e("p",[e("strong",[s._v("Pod （容器组）")]),s._v(" 是一个k8s中一个抽象的概念，用于存放一组 container（可包含一个或多个 container 容器，即图上正方体)，以及这些 container （容器）的一些共享资源。这些资源包括：")]),s._v(" "),e("ul",[e("li",[s._v("共享存储，称为卷(Volumes)，即图上紫色圆柱")]),s._v(" "),e("li",[s._v("网络，每个 Pod（容器组）在集群中有个唯一的 IP，pod（容器组）中的 container（容器）共享该IP地址")]),s._v(" "),e("li",[s._v("container（容器）的基本信息，例如容器的镜像版本，对外暴露的端口等")])]),s._v(" "),e("p",[e("strong",[s._v("Pod（容器组）是 k8s 集群上的最基本的单元")]),s._v("。当我们在 k8s 上创建 Deployment 时，会在"),e("strong",[s._v("集群上创建包含容器的 Pod (而不是直接创建容器)")]),s._v("。每个Pod都与运行它的 worker 节点（Node）绑定，并保持在那里直到终止或被删除。如果节点（Node）发生故障，则会在群集中的其他可用节点（Node）上运行相同的 Pod（从同样的镜像创建 Container，使用同样的配置，IP 地址不同，Pod 名字不同）。")]),s._v(" "),e("blockquote",[e("p",[s._v("TIP")]),s._v(" "),e("p",[s._v("重要：")]),s._v(" "),e("ul",[e("li",[s._v("Pod 是一组容器（可包含一个或多个应用程序容器），以及共享存储（卷 Volumes）、IP 地址和有关如何运行容器的信息。")]),s._v(" "),e("li",[s._v("如果多个容器紧密耦合并且需要共享磁盘等资源，则他们应该被部署在同一个Pod（容器组）中。")])])]),s._v(" "),e("h3",{attrs:{id:"_2、了解node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、了解node"}},[s._v("#")]),s._v(" 2、了解Node")]),s._v(" "),e("p",[s._v("**Pod（容器组）**总是在 "),e("strong",[s._v("Node（节点）")]),s._v(" 上运行。Node（节点）是 kubernetes 集群中的计算机，可以是虚拟机或物理机。每个 Node（节点）都由 master 管理。一个 Node（节点）可以有多个Pod（容器组），kubernetes master 会根据每个 Node（节点）上可用资源的情况，自动调度 Pod（容器组）到最佳的 Node（节点）上。")]),s._v(" "),e("p",[s._v("每个 Kubernetes Node（节点）至少运行：")]),s._v(" "),e("ul",[e("li",[s._v("Kubelet，负责 master 节点和 worker 节点之间通信的进程；管理 Pod（容器组）和 Pod（容器组）内运行的 Container（容器）。")]),s._v(" "),e("li",[s._v("kube-proxy，负责进行流量转发")]),s._v(" "),e("li",[s._v("容器运行环境（如Docker）负责下载镜像、创建和运行容器等。")])]),s._v(" "),e("p",[e("img",{attrs:{src:"assets/module_03_nodes.38f0ef71.svg",alt:"Node概念"}})]),s._v(" "),e("p",[s._v("Kubelet启动的Pod每个都有Ip，全集群任意位置均可访问")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("kubeadm init "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--apiserver-advertise-address"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.170")]),s._v(".11.8 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--image-repository registry.cn-hangzhou.aliyuncs.com/lfy_k8s_images "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--kubernetes-version v1.21.0 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--service-cidr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.96")]),s._v(".0.0/16 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--pod-network-cidr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.0/16\n\n--pod-network-cidr"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.0/16：pod 的ip范围\n\ncalico：网络组件:\n【扁平化网络】\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h3",{attrs:{id:"_3、故障排除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、故障排除"}},[s._v("#")]),s._v(" 3、故障排除")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("kubectl get")]),s._v(" - 显示资源列表")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get 资源类型")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取类型为Deployment的资源列表")]),s._v("\nkubectl get deployments\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取类型为Pod的资源列表")]),s._v("\nkubectl get pods\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取类型为Node的资源列表")]),s._v("\nkubectl get nodes\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])])]),s._v(" "),e("li",[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有名称空间的 Deployment")]),s._v("\nkubectl get deployments "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v("\nkubectl get deployments --all-namespaces\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 kube-system 名称空间的 Deployment")]),s._v("\nkubectl get deployments "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" kube-system\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])]),s._v(" "),e("li",[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#####并不是所有的对象都在名称空间中")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在名称空间里")]),s._v("\nkubectl api-resources "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--namespaced")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不在名称空间里")]),s._v("\nkubectl api-resources "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--namespaced")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("kubectl describe")]),s._v(" - 显示有关资源的详细信息")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl describe 资源类型 资源名称")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看名称为nginx-XXXXXX的Pod的信息")]),s._v("\nkubectl describe pod nginx-XXXXXX\t\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看名称为nginx的Deployment的信息")]),s._v("\nkubectl describe deployment my-nginx\t\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("kubectl logs")]),s._v(" - 查看pod中的容器的打印日志（和命令docker logs 类似）")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl logs Pod名称")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看名称为nginx-pod-XXXXXXX的Pod内的容器打印的日志")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#本案例中的 nginx-pod 没有输出日志，所以您看到的结果是空的")]),s._v("\nkubectl logs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" nginx-pod-XXXXXXX\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("kubectl exec")]),s._v(" - 在pod中的容器环境内执行命令(和命令docker exec 类似)")]),s._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl exec Pod名称 操作命令")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在名称为nginx-pod-xxxxxx的Pod中运行bash")]),s._v("\nkubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" nginx-pod-xxxxxx /bin/bash\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 注意：新版1.21.0 提示这个命令会过期")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])])])])]),s._v(" "),e("h3",{attrs:{id:"_4、kubectl-run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、kubectl-run"}},[s._v("#")]),s._v(" 4、kubectl run")]),s._v(" "),e("p",[s._v("也可以独立跑一个Pod")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## kubectl run --help")]),s._v("\nkubectl run nginx "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("总结：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("kubectl create 资源  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建任意资源")]),s._v("\nkubectl create deploy "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建部署")]),s._v("\nkubectl run "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#只创建一个Pod")]),s._v("\nkubectl get 资源名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node/pod/deploy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" xxx（指定名称空间，默认是default） "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取资源")]),s._v("\nkubectl describe  资源名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node/pod/deploy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  xxx "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#描述某个资源的详细信息")]),s._v("\nkubectl logs 资源名 "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##查看日志")]),s._v("\nkubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" pod名 -- 命令  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进pod并执行命令")]),s._v("\nkubectl delete 资源名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node/pod/deploy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" xxx  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除资源")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"_3、应用外部可见"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、应用外部可见"}},[s._v("#")]),s._v(" 3、应用外部可见")]),s._v(" "),e("h3",{attrs:{id:"_1、目标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、目标"}},[s._v("#")]),s._v(" 1、目标")]),s._v(" "),e("ul",[e("li",[s._v("了解 Kubernetes 中的 Service")]),s._v(" "),e("li",[s._v("了解 标签(Label) 和 标签选择器(Label Selector) 对象如何与 Service 关联")]),s._v(" "),e("li",[s._v("在 Kubernetes 集群外用 Service 暴露应用")])]),s._v(" "),e("h3",{attrs:{id:"_2、kubernetes-service-总览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、kubernetes-service-总览"}},[s._v("#")]),s._v(" 2、Kubernetes Service 总览")]),s._v(" "),e("ul",[e("li",[s._v("Kubernetes "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pod"),e("OutboundLink")],1),s._v(" 是转瞬即逝的。")]),s._v(" "),e("li",[s._v("Pod 实际上拥有 "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/",target:"_blank",rel:"noopener noreferrer"}},[s._v("生命周期"),e("OutboundLink")],1),s._v("。 当一个工作 Node 挂掉后, 在 Node 上运行的 Pod 也会消亡。")]),s._v(" "),e("li",[e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/replicaset/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ReplicaSet"),e("OutboundLink")],1),s._v(" 会自动地通过创建新的 Pod 驱动集群回到目标状态，以保证应用程序正常运行。")]),s._v(" "),e("li",[e("em",[s._v("Kubernetes 的 Service 是一个抽象层，它定义了一组 Pod 的逻辑集，并为这些 Pod 支持外部流量暴露、负载平衡和服务发现。")]),s._v(" "),e("ul",[e("li",[s._v("Service 使从属 Pod 之间的松耦合成为可能。 和其他 Kubernetes 对象一样, Service 用 YAML "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/configuration/overview/#general-configuration-tips",target:"_blank",rel:"noopener noreferrer"}},[s._v("(更推荐)"),e("OutboundLink")],1),s._v(" 或者 JSON 来定义. Service 下的一组 Pod 通常由 "),e("em",[s._v("LabelSelector")]),s._v(" (请参阅下面的说明为什么您可能想要一个 spec 中不包含"),e("code",[s._v("selector")]),s._v("的服务)来标记。")]),s._v(" "),e("li",[s._v("尽管每个 Pod 都有一个唯一的 IP 地址，但是如果没有 Service ，这些 IP 不会暴露在群集外部。Service 允许您的应用程序接收流量。Service 也可以用在 ServiceSpec 标记"),e("code",[s._v("type")]),s._v("的方式暴露\n"),e("ul",[e("li",[e("em",[s._v("ClusterIP")]),s._v(" (默认) - 在集群的内部 IP 上公开 Service 。这种类型使得 Service 只能从集群内访问。")]),s._v(" "),e("li",[e("em",[s._v("NodePort")]),s._v(" - 使用 NAT 在集群中每个选定 Node 的相同端口上公开 Service 。使用"),e("code",[s._v("<NodeIP>:<NodePort>")]),s._v(" 从集群外部访问 Service。是 ClusterIP 的超集。")]),s._v(" "),e("li",[e("em",[s._v("LoadBalancer")]),s._v(" - 在当前云中创建一个外部负载均衡器(如果支持的话)，并为 Service 分配一个固定的外部IP。是 NodePort 的超集。")]),s._v(" "),e("li",[e("em",[s._v("ExternalName")]),s._v(" - 通过返回带有该名称的 CNAME 记录，使用任意名称(由 spec 中的"),e("code",[s._v("externalName")]),s._v("指定)公开 Service。不使用代理。这种类型需要"),e("code",[s._v("kube-dns")]),s._v("的v1.7或更高版本。")])])])])])]),s._v(" "),e("h3",{attrs:{id:"_3、service-和-label"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、service-和-label"}},[s._v("#")]),s._v(" 3、Service 和 Label")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_04_services.svg",alt:"img"}})]),s._v(" "),e("p",[s._v("Service 通过一组 Pod 路由通信。Service 是一种抽象，它允许 Pod 死亡并在 Kubernetes 中复制，而不会影响应用程序。在依赖的 Pod (如应用程序中的前端和后端组件)之间进行发现和路由是由Kubernetes Service 处理的。")]),s._v(" "),e("p",[s._v("Service 匹配一组 Pod 是使用 "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/labels",target:"_blank",rel:"noopener noreferrer"}},[s._v("标签(Label)和选择器(Selector)"),e("OutboundLink")],1),s._v(", 它们是允许对 Kubernetes 中的对象进行逻辑操作的一种分组原语。标签(Label)是附加在对象上的键/值对，可以以多种方式使用:")]),s._v(" "),e("ul",[e("li",[s._v("指定用于开发，测试和生产的对象")]),s._v(" "),e("li",[s._v("嵌入版本标签")]),s._v(" "),e("li",[s._v("使用 Label 将对象进行分类")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_04_labels.svg",alt:"img"}})]),s._v(" "),e("h3",{attrs:{id:"_4、kubectl-expose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、kubectl-expose"}},[s._v("#")]),s._v(" 4、kubectl expose")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v(" kubectl expose deployment tomcat6 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8912")]),s._v(" --target-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NodePort\n \n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## --port：集群内访问service的端口 8912")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## --target-port： pod容器的端口 8080")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## --nodePort： 每个机器开发的端口 30403")]),s._v("\n \n \n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 进行验证")]),s._v("\n kubectl get svc \n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" ip:port\n \n kubectl expose  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#暴露，成一个负载均衡网络")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## kubectl exec 进去pod修改，并测试负载均衡")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h2",{attrs:{id:"_4、伸缩应用程序-扩缩容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、伸缩应用程序-扩缩容"}},[s._v("#")]),s._v(" 4、伸缩应用程序-扩缩容")]),s._v(" "),e("p",[e("strong",[s._v("目标")])]),s._v(" "),e("ul",[e("li",[s._v("用 kubectl 扩缩应用程序")]),s._v(" "),e("li",[s._v("扩缩一个 Deployment")])]),s._v(" "),e("p",[s._v("我们创建了一个 "),e("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Deployment "),e("OutboundLink")],1),s._v("，然后通过 "),e("a",{attrs:{href:"https://kubernetes.io/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"}},[s._v("服务"),e("OutboundLink")],1),s._v("提供访问 Pod 的方式。我们发布的 Deployment 只创建了一个 Pod 来运行我们的应用程序。当流量增加时，我们需要对应用程序进行伸缩操作以满足系统性能需求。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/1619086037936.png",alt:"1619086037936"}})]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 扩展")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 扩容的Pod会自动加入到他之前存在的Service（负载均衡网络）")]),s._v("\nkubectl scale "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--replicas")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  deployment tomcat6\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#持续观测效果")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" kubectl get pods "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" wide\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"_5、执行滚动升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、执行滚动升级"}},[s._v("#")]),s._v(" 5、执行滚动升级")]),s._v(" "),e("p",[e("strong",[s._v("目标")])]),s._v(" "),e("ul",[e("li",[s._v("使用 kubectl 执行滚动更新")])]),s._v(" "),e("blockquote",[e("p",[e("em",[s._v("滚动更新允许通过使用新的实例逐步更新 Pod 实例从而实现 Deployments 更新，停机时间为零。")])])]),s._v(" "),e("p",[s._v("与应用程序扩展类似，如果暴露了 Deployment，服务（Service）将在更新期间仅对可用的 pod 进行负载均衡。可用 Pod 是应用程序用户可用的实例。")]),s._v(" "),e("p",[s._v("滚动更新允许以下操作：")]),s._v(" "),e("ul",[e("li",[s._v("将应用程序从一个环境提升到另一个环境（通过容器镜像更新）")]),s._v(" "),e("li",[s._v("回滚到以前的版本")]),s._v(" "),e("li",[s._v("持续集成和持续交付应用程序，无需停机")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_06_rollingupdates1.svg",alt:"img"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_06_rollingupdates2.svg",alt:"img"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_06_rollingupdates3.svg",alt:"img"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-vuepress-img/module_06_rollingupdates4.svg",alt:"img"}})]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#应用升级: tomcat:alpine、tomcat:jre8-alpine")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl set image deployment/my-nginx2  nginx=nginx:1.9.1")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##联合jenkins 形成持续集成，灰度发布功能")]),s._v("\nkubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" image deployment.apps/tomcat6 "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("tomcat")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tomcat:jre8-alpine "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#可以携带--record参数，记录变更")]),s._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##回滚升级")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 查看历史记录")]),s._v("\nkubectl rollout "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" deployment.apps/tomcat6\nkubectl rollout "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" deploy tomcat6\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### 回滚到指定版本")]),s._v("\nkubectl rollout undo deployment.apps/tomcat6 --to-revision"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nkubectl rollout undo deploy tomcat6 --to-revision"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("命令：记的太多")]),s._v(" "),e("p",[s._v("声明式API；")]),s._v(" "),e("p",[s._v("对象描述文件的方式；Pod --》 yaml ，  Deploy--》yaml  ，  Service --》 yaml")]),s._v(" "),e("p",[s._v("kubectl apply -f  xxx.yaml .；")]),s._v(" "),e("p",[s._v("用文件固化操作。移植性增加")]),s._v(" "),e("h2",{attrs:{id:"_6、以上用配置文件方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、以上用配置文件方式"}},[s._v("#")]),s._v(" 6、以上用配置文件方式")]),s._v(" "),e("h3",{attrs:{id:"_1、部署一个应用-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、部署一个应用-2"}},[s._v("#")]),s._v(" 1、部署一个应用")]),s._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" apps/v1\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#与k8s集群版本有关，使用 kubectl api-versions 即可查看当前集群支持的版本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Deployment\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#该配置的类型，我们使用的是 Deployment")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#译名为元数据，即 Deployment 的一些基本属性和信息")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("deployment\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Deployment 的名称")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#标签，可以灵活定位一个或多个资源，其中key和value均可自定义，可以定义多组，目前不需要理解")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为该Deployment设置key为app，value为nginx的标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这是关于该Deployment的描述，可以理解为你期待该Deployment在k8s中如何使用")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用该Deployment创建一个应用程序实例")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#标签选择器，与上面的标签共同作用，目前不需要理解")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#选择包含标签app:nginx的资源")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这是选择或创建的Pod的模板")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Pod的元数据")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Pod的标签，上面的selector即选择包含标签app:nginx的Pod")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#期望Pod实现的功能（即在pod中部署）")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#生成container，与docker中的container是同一种")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#container的名称")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.7.9\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用镜像nginx:1.7.9创建container，该container默认80端口可访问")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("blockquote",[e("p",[s._v("kubectl apply -f xxx.yaml")])]),s._v(" "),e("h3",{attrs:{id:"_2、暴露应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、暴露应用"}},[s._v("#")]),s._v(" 2、暴露应用")]),s._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Service 的名称")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("     \t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Service 自己的标签")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为该 Service 设置 key 为 app，value 为 nginx 的标签")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#这是关于该 Service 的定义，描述了 Service 如何选择 Pod，如何被访问")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\t    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#标签选择器")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#选择包含标签 app:nginx 的 Pod")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("port\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#端口的名字")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\t    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#协议类型 TCP/UDP")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\t        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#集群内的其他容器组可通过 80 端口访问 Service")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodePort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("32600")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#通过任意节点的 32600 端口访问 Service")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将请求转发到匹配 Pod 的 80 端口")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" NodePort\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Serive的类型，ClusterIP/NodePort/LoaderBalancer")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h3",{attrs:{id:"_3、扩缩容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、扩缩容"}},[s._v("#")]),s._v(" 3、扩缩容")]),s._v(" "),e("p",[s._v("修改deployment.yaml 中的 replicas 属性即可")]),s._v(" "),e("p",[s._v("完成后运行  kubectl apply -f xxx.yaml")]),s._v(" "),e("h3",{attrs:{id:"_4、滚动升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、滚动升级"}},[s._v("#")]),s._v(" 4、滚动升级")]),s._v(" "),e("p",[s._v("修改deployment.yaml 中的 imageName 属性等")]),s._v(" "),e("p",[s._v("完成后运行  kubectl apply -f xxx.yaml")]),s._v(" "),e("blockquote",[e("p",[s._v("以上都可以直接 kubectl edit deploy/service 等，修改完成后自动生效")])])])}),[],!1,null,null,null);e.default=n.exports}}]);