(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{686:function(e,s,n){"use strict";n.r(s);var a=n(0),r=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("我们一般希望搭建的各个微服务系统是受保护的，只有通过合法的认证信息才能访问相关资源，所以在这一节中，我们将借助Spring Cloud OAuth和Spring Cloud Security搭建一个统一给微服务发放访问令牌的认证服务器febs-auth。")]),e._v(" "),s("h2",{attrs:{id:"oauth2协议简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oauth2协议简介"}},[e._v("#")]),e._v(" OAuth2协议简介")]),e._v(" "),s("p",[e._v("在微服务架构下，我们通常根据不同的业务来构建不同的微服务子系统，各个子系统对外提供相应的服务。客户端除了浏览器外，还可能是手机App，小程序等。在微服务架构出现之前，我们的系统一般为单体模式，客户端只是单一的浏览器，所以通常情况下都是通过Session进行客户端，服务端通信，而随着客户端种类越来越多，这种交互方式变得越来越困难，于是OAuth协议应运而生。")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://oauth.net/2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OAuth"),s("OutboundLink")],1),e._v("是一种用来规范令牌（Token）发放的授权机制，目前最新版本为2.0，其主要包含了四种授权模式：授权码模式、简化模式、密码模式和客户端模式。Spring Cloud OAuth对这四种授权模式进行了实现。由于我们的前端系统是通过用户名和密码来登录系统的，所以这里只介绍密码模式。")]),e._v(" "),s("h2",{attrs:{id:"密码模式简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#密码模式简介"}},[e._v("#")]),e._v(" 密码模式简介")]),e._v(" "),s("p",[e._v("在密码模式中，用户向客户端提供用户名和密码，客户端通过用户名和密码到认证服务器获取令牌。流程如下所示：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/05/e2r7vj.png",alt:"18.png"}})]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Resource Owner")]),e._v("，资源所有者，即当前正在使用系统的用户；")]),e._v(" "),s("li",[s("strong",[e._v("Client")]),e._v("，客户端，比如浏览器，App等；")]),e._v(" "),s("li",[s("strong",[e._v("Authorization server")]),e._v("，认证服务器，提供认证服务，并发放访问令牌。")])]),e._v(" "),s("p",[e._v("如上图所示，密码模式包含了三个步骤：")]),e._v(" "),s("ol",[s("li",[e._v("用户向客户端提供用户名和密码；")]),e._v(" "),s("li",[e._v("客户端向认证服务器换取令牌；")]),e._v(" "),s("li",[e._v("认证服务器发放令牌。")])]),e._v(" "),s("p",[e._v("其中第2步客户端发出的HTTP请求，包含以下参数：")]),e._v(" "),s("ul",[s("li",[e._v("grant_type：授权类型，此处的值固定为password，必选项。")]),e._v(" "),s("li",[e._v("username：用户名，必选项。")]),e._v(" "),s("li",[e._v("password：密码，必选项。")]),e._v(" "),s("li",[e._v("scope：权限范围，可选项。")])]),e._v(" "),s("h2",{attrs:{id:"搭建微服务认证服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建微服务认证服务器"}},[e._v("#")]),e._v(" 搭建微服务认证服务器")]),e._v(" "),s("p",[e._v("在了解了OAuth协议和密码模式后，我们开始搭建认证服务器。点击IDEA菜单栏 File -> New -> Module...，因为认证服务器也是一个Spring Boot应用，所以模板选择Spring Initializr，Module SDK选择JDK 1.8：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/05/e2rbKs.png",alt:"19.png"}})]),e._v(" "),s("p",[e._v("点击Next，按照下图所示填写相关内容：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/05/e2rqrn.png",alt:"20.png"}})]),e._v(" "),s("p",[e._v("点击Next，在依赖选择过程中，我们先不选择任何依赖，直接继续点击Next：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/05/e2sXyd.png",alt:"21.png"}})]),e._v(" "),s("p",[e._v("填写模块名称和路径后，点击Finish完成创建，至此，项目结构如下所示：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/05/e2y8X9.png",alt:"22.png"}})]),e._v(" "),s("p",[e._v("我们修改febs-auth模块的pom，内容如下所示：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>cc.mrbird</groupId>\n        <artifactId>febs-cloud</artifactId>\n        <version>1.0-SNAPSHOT</version>\n        <relativePath>../febs-cloud/pom.xml</relativePath>\n    </parent>\n\n    <artifactId>febs-auth</artifactId>\n    <name>FEBS-Auth</name>\n    <description>FEBS-Cloud认证服务器</description>\n\n    <dependencies>\n        <dependency>\n            <groupId>cc.mrbird</groupId>\n            <artifactId>febs-common</artifactId>\n            <version>1.0-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br")])]),s("p",[e._v("在上述pom配置中，我们指定了父项目为febs-cloud，并且引入了通用模块febs-common，因为通用模块febs-common里已经包含了spring-cloud-starter-oauth2和spring-cloud-starter-security依赖，所以这里无需再次引入。")]),e._v(" "),s("p",[e._v("修改febs-cloud模块的pom，在modules标签里引入febs-auth：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<modules>\n    <module>../febs-common</module>\n    <module>../febs-register</module>\n    <module>../febs-auth</module>\n</modules>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("因为后续我们需要将认证服务器生成的Token存储到Redis中，并且Redis依赖可能会被多个微服务使用到，于是我们在febs-common模块中引入redis相关依赖：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("此外，我们需要将febs-auth服务注册到上一节搭建的febs-register中，所以我们在febs-common模块里继续添加Eureka相关依赖：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n</dependency>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("往Eureak服务端注册服务的应用称为Eureka客户端，所以上面引入的是Eureka Client相关依赖。")]),e._v(" "),s("p",[e._v("在febs-auth的入口类"),s("code",[e._v("FebsAuthApplication")]),e._v("上添加"),s("code",[e._v("@EnableDiscoveryClient")]),e._v("注解，用于开启服务注册与发现功能：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@EnableDiscoveryClient\n@SpringBootApplication\npublic class FebsAuthApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(FebsAuthApplication.class, args);\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("接着编写配置文件application.yml，内容如下所示：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("server:\n  port: 8101\n\nspring:\n  application:\n    name: FEBS-Auth\n\neureka:\n  instance:\n    lease-renewal-interval-in-seconds: 20\n  client:\n    register-with-eureka: true\n    fetch-registry: true\n    instance-info-replication-interval-seconds: 30\n    registry-fetch-interval-seconds: 3\n    serviceUrl:\n      defaultZone: http://febs:123456@localhost:8001/register/eureka/\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("p",[e._v("上述配置指定了应用端口号为8101，服务名称为FEBS-Auth（别的微服务可以通过这个名称从注册中心获取FEBS-Auth提供的服务），剩下的为Eureka相关配置，含义如下：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("eureka.instance.lease-renewal-interval-in-seconds")]),e._v("，向Eureka 服务端发送心跳的间隔时间，单位为秒，用于服务续约。这里配置为20秒，即每隔20秒向febs-register发送心跳，表明当前服务没有宕机；")]),e._v(" "),s("li",[s("code",[e._v("eureka.client.register-with-eureka")]),e._v("，为true时表示将当前服务注册到Eureak服务端；")]),e._v(" "),s("li",[s("code",[e._v("eureka.client.fetch-registry")]),e._v("，为true时表示从Eureka 服务端获取注册的服务信息；")]),e._v(" "),s("li",[s("code",[e._v("eureka.client.instance-info-replication-interval-seconds")]),e._v("，新实例信息的变化到Eureka服务端的间隔时间，单位为秒；")]),e._v(" "),s("li",[s("code",[e._v("eureka.client.registry-fetch-interval-seconds")]),e._v("，默认值为30秒，即每30秒去Eureka服务端上获取服务并缓存，这里指定为3秒的原因是方便开发时测试，实际可以指定为默认值即可；")]),e._v(" "),s("li",[s("code",[e._v("eureka.client.serviceUrl.defaultZone")]),e._v("，指定Eureka服务端地址。")])]),e._v(" "),s("p",[e._v("和Eureka相关的编码结束后，我们开始编写和安全相关的配置类。")]),e._v(" "),s("p",[e._v("首先我们需要定义一个WebSecurity类型的安全配置类"),s("code",[e._v("FebsSecurityConfigure")]),e._v("，在cc.mrbird.febs.auth路径下新增configure包，然后在configure包下新增"),s("code",[e._v("FebsSecurityConfigure")]),e._v("类，代码如下所示：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@EnableWebSecurity\npublic class FebsSecurityConfigure extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    private FebsUserDetailService userDetailService;\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    @Bean\n    @Override\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        return super.authenticationManagerBean();\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.requestMatchers()\n                .antMatchers("/oauth/**")\n            .and()\n                .authorizeRequests()\n                .antMatchers("/oauth/**").authenticated()\n            .and()\n                .csrf().disable();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.userDetailsService(userDetailService).passwordEncoder(passwordEncoder());\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br")])]),s("p",[e._v("该类继承了"),s("code",[e._v("WebSecurityConfigurerAdapter")]),e._v("适配器，重写了几个方法，并且使用"),s("code",[e._v("@EnableWebSecurity")]),e._v("注解标注，开启了和Web相关的安全配置。")]),e._v(" "),s("p",[e._v("上面代码中，我们首先注入了"),s("code",[e._v("FebsUserDetailService")]),e._v("，这个类下面会介绍到，这里先略过；然后我们定义了一个"),s("code",[e._v("PasswordEncoder")]),e._v("类型的Bean，该类是一个接口，定义了几个和密码加密校验相关的方法，这里我们使用的是Spring Security内部实现好的"),s("code",[e._v("BCryptPasswordEncoder")]),e._v("。"),s("code",[e._v("BCryptPasswordEncoder")]),e._v("的特点就是，对于一个相同的密码，每次加密出来的加密串都不同：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('public static void main(String[] args) {\n    String password = "123456";\n    PasswordEncoder encoder = new BCryptPasswordEncoder();\n    System.out.println(encoder.encode(password));\n    System.out.println(encoder.encode(password));\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("运行该main方法，可以看到两次输出的结果并不一样：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$2a$10$TgKIGaJrL8LBFT8bEj8gH.3ctyo1PpSTw4fs4o6RuMOE4R665HdpS\n$2a$10$ZEcCOMVVIV5SfoXPXih92uGJfVeaugMr/PydhYnLvsCroS9xWjOIq\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("当然，你可以自己实现"),s("code",[e._v("PasswordEncoder")]),e._v("接口，这里为了方便就直接使用"),s("code",[e._v("BCryptPasswordEncoder")]),e._v("了。")]),e._v(" "),s("p",[e._v("接着我们注册了一个"),s("code",[e._v("authenticationManagerBean")]),e._v("，因为密码模式需要使用到这个Bean。")]),e._v(" "),s("p",[e._v("在"),s("code",[e._v("FebsSecurityConfigure")]),e._v("类中，我们还重写了"),s("code",[e._v("WebSecurityConfigurerAdapter")]),e._v("类的"),s("code",[e._v("configure(HttpSecurity http)")]),e._v("方法，其中"),s("code",[e._v('requestMatchers().antMatchers("/oauth/**")')]),e._v("的含义是："),s("code",[e._v("FebsSecurityConfigure")]),e._v("安全配置类只对"),s("code",[e._v("/oauth/")]),e._v("开头的请求有效。")]),e._v(" "),s("p",[e._v("最后我们重写了"),s("code",[e._v("configure(AuthenticationManagerBuilder auth)")]),e._v("方法，指定了"),s("code",[e._v("userDetailsService")]),e._v("和"),s("code",[e._v("passwordEncoder")]),e._v("。")]),e._v(" "),s("p",[e._v("虽然我们现在正在搭建的是一个认证服务器，但是认证服务器本身也可以对外提供REST服务，比如通过Token获取当前登录用户信息，注销当前Token等，所以它也是一台资源服务器。于是我们需要定义一个资源服务器的配置类，在cc.mrbird.febs.auth.configure包下新建"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("类：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@Configuration\n@EnableResourceServer\npublic class FebsResourceServerConfigure extends ResourceServerConfigurerAdapter {\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.csrf().disable()\n                .requestMatchers().antMatchers("/**")\n                .and()\n                .authorizeRequests()\n                .antMatchers("/**").authenticated();\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("p",[s("code",[e._v("FebsResourceServerConfigure")]),e._v("继承了"),s("code",[e._v("ResourceServerConfigurerAdapter")]),e._v("，并重写了"),s("code",[e._v("configure(HttpSecurity http)")]),e._v("方法，通过"),s("code",[e._v('requestMatchers().antMatchers("/**")')]),e._v("的配置表明该安全配置对所有请求都生效。类上的"),s("code",[e._v("@EnableResourceServer")]),e._v("用于开启资源服务器相关配置。")]),e._v(" "),s("p",[e._v("相信到这里你肯定会有点困惑，貌似"),s("code",[e._v("FebsSecurityConfigure")]),e._v("和"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("所做的工作是类似的，"),s("code",[e._v("FebsSecurityConfigure")]),e._v("对"),s("code",[e._v("/oauth/")]),e._v("开头的请求生效，而"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("对所有请求都生效，那么当一个请求进来时，到底哪个安全配置先生效呢？其实并没有哪个配置先生效这么一说，当在Spring Security中定义了多个过滤器链的时候，根据其优先级，只有优先级较高的过滤器链会先进行匹配。")]),e._v(" "),s("p",[e._v("那么"),s("code",[e._v("FebsSecurityConfigure")]),e._v("和"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("的优先级是多少？首先我们查看"),s("code",[e._v("FebsSecurityConfigure")]),e._v("继承的类"),s("code",[e._v("WebSecurityConfigurerAdapter")]),e._v("的源码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Order(100)\npublic abstract class WebSecurityConfigurerAdapter implements WebSecurityConfigurer<WebSecurity> {\n   ......\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("可以看到类上使用了"),s("code",[e._v("@Order(100)")]),e._v("标注，说明其顺序是100。")]),e._v(" "),s("p",[e._v("再来看看"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("类上"),s("code",[e._v("@EnableResourceServer")]),e._v("注解源码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Target({ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Import({ResourceServerConfiguration.class})\npublic @interface EnableResourceServer {\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("该注解引入了"),s("code",[e._v("ResourceServerConfiguration")]),e._v("配置类，查看"),s("code",[e._v("ResourceServerConfiguration")]),e._v("源码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Configuration\npublic class ResourceServerConfiguration extends WebSecurityConfigurerAdapter implements Ordered {\n    private int order = 3;\n    ......\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("所以"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("的顺序是3。在Spring中，数字越小，优先级越高，也就是说"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("的优先级要高于"),s("code",[e._v("FebsSecurityConfigure")]),e._v("，这也就意味着所有请求都会被"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("过滤器链处理，包括"),s("code",[e._v("/oauth/")]),e._v("开头的请求。这显然不是我们要的效果，我们原本是希望以"),s("code",[e._v("/oauth/")]),e._v("开头的请求由"),s("code",[e._v("FebsSecurityConfigure")]),e._v("过滤器链处理，剩下的其他请求由"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("过滤器链处理。")]),e._v(" "),s("p",[e._v("为了解决上面的问题，我们可以手动指定这两个类的优先级，让"),s("code",[e._v("FebsSecurityConfigure")]),e._v("的优先级高于"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("。在"),s("code",[e._v("FebsSecurityConfigure")]),e._v("类上使用"),s("code",[e._v("Order(2)")]),e._v("注解标注即可：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Order(2)\n@EnableWebSecurity\npublic class FebsSecurityConfigure extends WebSecurityConfigurerAdapter {\n    ......\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("说了这么多，总结下"),s("code",[e._v("FebsSecurityConfigure")]),e._v("和"),s("code",[e._v("FebsResourceServerConfigure")]),e._v("的区别吧：")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("FebsSecurityConfigure")]),e._v("用于处理"),s("code",[e._v("/oauth")]),e._v("开头的请求，Spring Cloud OAuth内部定义的获取令牌，刷新令牌的请求地址都是以"),s("code",[e._v("/oauth/")]),e._v("开头的，也就是说"),s("code",[e._v("FebsSecurityConfigure")]),e._v("用于处理和令牌相关的请求；")]),e._v(" "),s("li",[s("code",[e._v("FebsResourceServerConfigure")]),e._v("用于处理非"),s("code",[e._v("/oauth/")]),e._v("开头的请求，其主要用于资源的保护，客户端只能通过OAuth2协议发放的令牌来从资源服务器中获取受保护的资源。")])]),e._v(" "),s("p",[e._v("接着我们定义一个和认证服务器相关的安全配置类。在configure包下新建"),s("code",[e._v("FebsAuthorizationServerConfigure")]),e._v("，代码如下所示:")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@Configuration\n@EnableAuthorizationServer\npublic class FebsAuthorizationServerConfigure extends AuthorizationServerConfigurerAdapter {\n\n    @Autowired\n    private AuthenticationManager authenticationManager;\n    @Autowired\n    private RedisConnectionFactory redisConnectionFactory;\n    @Autowired\n    private FebsUserDetailService userDetailService;\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n        clients.inMemory()\n                .withClient("febs")\n                .secret(passwordEncoder.encode("123456"))\n                .authorizedGrantTypes("password", "refresh_token")\n                .scopes("all");\n    }\n\n    @Override\n    public void configure(AuthorizationServerEndpointsConfigurer endpoints) {\n        endpoints.tokenStore(tokenStore())\n                .userDetailsService(userDetailService)\n                .authenticationManager(authenticationManager)\n                .tokenServices(defaultTokenServices());\n    }\n\n    @Bean\n    public TokenStore tokenStore() {\n        return new RedisTokenStore(redisConnectionFactory);\n    }\n\n    @Primary\n    @Bean\n    public DefaultTokenServices defaultTokenServices() {\n        DefaultTokenServices tokenServices = new DefaultTokenServices();\n        tokenServices.setTokenStore(tokenStore());\n        tokenServices.setSupportRefreshToken(true);\n        tokenServices.setAccessTokenValiditySeconds(60 * 60 * 24);\n        tokenServices.setRefreshTokenValiditySeconds(60 * 60 * 24 * 7);\n        return tokenServices;\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br")])]),s("p",[s("code",[e._v("FebsAuthorizationServerConfigure")]),e._v("继承"),s("code",[e._v("AuthorizationServerConfigurerAdapter")]),e._v("适配器，使用"),s("code",[e._v("@EnableAuthorizationServer")]),e._v("注解标注，开启认证服务器相关配置。")]),e._v(" "),s("p",[e._v("上面代码中，我们注入了在"),s("code",[e._v("FebsSecurityConfigure")]),e._v("配置类中注册的Bean"),s("code",[e._v("AuthenticationManager")]),e._v("和"),s("code",[e._v("PasswordEncoder")]),e._v("。此外，由于之前我们在febs-common中引入了spring-boot-starter-data-redis依赖，而febs-auth模块引用了febs-common模块，所以在febs-auth的上下文中已经装配好了Redis相关配置，如"),s("code",[e._v("RedisConnectionFactory")]),e._v("（自动装配特性）。")]),e._v(" "),s("p",[e._v("在febs-auth中采用的是Redis默认配置，所以你会发现我们并没有在配置类application.yml中编写和Redis有关的配置，但是为了更为直观，建议还是在application.yml中添加如下配置：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("spring:\n  redis:\n    database: 0\n    host: 127.0.0.1\n    port: 6379\n    jedis:\n      pool:\n        min-idle: 8\n        max-idle: 500\n        max-active: 2000\n        max-wait: 10000\n    timeout: 5000\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[e._v("在"),s("code",[e._v("FebsAuthorizationServerConfigure")]),e._v("中，"),s("code",[e._v("tokenStore")]),e._v("使用的是"),s("code",[e._v("RedisTokenStore")]),e._v("，认证服务器生成的令牌将被存储到Redis中。")]),e._v(" "),s("p",[s("code",[e._v("defaultTokenServices")]),e._v("指定了令牌的基本配置，比如令牌有效时间为"),s("code",[e._v("60 * 60 * 24")]),e._v("秒，刷新令牌有效时间为"),s("code",[e._v("60 * 60 * 24 * 7")]),e._v("秒，"),s("code",[e._v("setSupportRefreshToken")]),e._v("设置为true表示开启刷新令牌的支持。")]),e._v(" "),s("p",[s("code",[e._v("FebsAuthorizationServerConfigure")]),e._v("配置类中重点需要介绍的是"),s("code",[e._v("configure(ClientDetailsServiceConfigurer clients)")]),e._v("方法。该方法主要配置了：")]),e._v(" "),s("ol",[s("li",[e._v("客户端从认证服务器获取令牌的时候，必须使用client_id为febs，client_secret为123456的标识来获取；")]),e._v(" "),s("li",[e._v("该client_id支持password模式获取令牌，并且可以通过refresh_token来获取新的令牌；")]),e._v(" "),s("li",[e._v("在获取client_id为febs的令牌的时候，scope只能指定为all，否则将获取失败；")])]),e._v(" "),s("p",[e._v("如果需要指定多个client，可以继续使用"),s("code",[e._v("withClient")]),e._v("配置。")]),e._v(" "),s("p",[e._v("在定义好这三个配置类后，我们还需要定义一个用于校验用户名密码的类，也就是上面提到的"),s("code",[e._v("FebsUserDetailService")]),e._v("。在cc.mrbird.febs.auth路径下新增service包，然后在service包下新增"),s("code",[e._v("FebsUserDetailService")]),e._v("类，代码如下所示：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@Service\npublic class FebsUserDetailService implements UserDetailsService {\n\n    @Autowired\n    private PasswordEncoder passwordEncoder;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        FebsAuthUser user = new FebsAuthUser();\n        user.setUsername(username);\n        user.setPassword(this.passwordEncoder.encode("123456"));\n\n        return new User(username, user.getPassword(), user.isEnabled(),\n                user.isAccountNonExpired(), user.isCredentialsNonExpired(),\n                user.isAccountNonLocked(), AuthorityUtils.commaSeparatedStringToAuthorityList("user:add"));\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("p",[s("code",[e._v("FebsUserDetailService")]),e._v("实现了"),s("code",[e._v("UserDetailsService")]),e._v("接口的"),s("code",[e._v("loadUserByUsername")]),e._v("方法。"),s("code",[e._v("loadUserByUsername")]),e._v("方法返回一个"),s("code",[e._v("UserDetails")]),e._v("对象，该对象也是一个接口，包含一些用于描述用户信息的方法，源码如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public interface UserDetails extends Serializable {\n    Collection<? extends GrantedAuthority> getAuthorities();\n\n    String getPassword();\n\n    String getUsername();\n\n    boolean isAccountNonExpired();\n\n    boolean isAccountNonLocked();\n\n    boolean isCredentialsNonExpired();\n\n    boolean isEnabled();\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("p",[e._v("这些方法的含义如下：")]),e._v(" "),s("ol",[s("li",[s("code",[e._v("getAuthorities")]),e._v("获取用户包含的权限，返回权限集合，权限是一个继承了"),s("code",[e._v("GrantedAuthority")]),e._v("的对象；")]),e._v(" "),s("li",[s("code",[e._v("getPassword")]),e._v("和"),s("code",[e._v("getUsername")]),e._v("用于获取密码和用户名；")]),e._v(" "),s("li",[s("code",[e._v("isAccountNonExpired")]),e._v("方法返回boolean类型，用于判断账户是否未过期，未过期返回true反之返回false；")]),e._v(" "),s("li",[s("code",[e._v("isAccountNonLocked")]),e._v("方法用于判断账户是否未锁定；")]),e._v(" "),s("li",[s("code",[e._v("isCredentialsNonExpired")]),e._v("用于判断用户凭证是否没过期，即密码是否未过期；")]),e._v(" "),s("li",[s("code",[e._v("isEnabled")]),e._v("方法用于判断用户是否可用。")])]),e._v(" "),s("p",[e._v("实际中我们可以自定义"),s("code",[e._v("UserDetails")]),e._v("接口的实现类，也可以直接使用Spring Security提供的"),s("code",[e._v("UserDetails")]),e._v("接口实现类"),s("code",[e._v("org.springframework.security.core.userdetails.User")]),e._v("。")]),e._v(" "),s("p",[s("code",[e._v("FebsUserDetailService")]),e._v("中"),s("code",[e._v("FebsAuthUser")]),e._v("为我们自定义的用户实体类，代表我们从数据库中查询出来的用户。我们在febs-common中定义该实体类，在febs-cmmon模块下新增cc.mrbird.febs.common.entity包，然后在entity包下新增"),s("code",[e._v("FebsAuthUser")]),e._v("：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Data\npublic class FebsAuthUser implements Serializable {\n    private static final long serialVersionUID = -1748289340320186418L;\n\n    private String username;\n\n    private String password;\n\n    private boolean accountNonExpired = true;\n\n    private boolean accountNonLocked= true;\n\n    private boolean credentialsNonExpired= true;\n\n    private boolean enabled= true;\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])]),s("p",[s("code",[e._v("@Data")]),e._v("注解为lombok注解，用于自动生成get，set方法。")]),e._v(" "),s("p",[e._v("在"),s("code",[e._v("FebsUserDetailService")]),e._v("的"),s("code",[e._v("loadUserByUsername")]),e._v("方法中，我们模拟了一个用户，用户名为用户输入的用户名，密码为123456（后期再改造为从数据库中获取用户），然后返回"),s("code",[e._v("org.springframework.security.core.userdetails.User")]),e._v("。这里使用的是User类包含7个参数的构造器，其还包含一个三个参数的构造器"),s("code",[e._v("User(String username, String password,Collection<? extends GrantedAuthority> authorities)")]),e._v("，由于权限参数不能为空，所以这里先使用"),s("code",[e._v("AuthorityUtils.commaSeparatedStringToAuthorityList")]),e._v("方法模拟一个"),s("code",[e._v("user:add")]),e._v("权限。")]),e._v(" "),s("p",[e._v("最后定义一个Controller，对外提供一些REST服务。在cc.mrbird.febs.auth路径下新增controller包，在controller包下新增"),s("code",[e._v("SecurityController")]),e._v("：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@RestController\npublic class SecurityController {\n\n    @Autowired\n    private ConsumerTokenServices consumerTokenServices;\n\n    @GetMapping("oauth/test")\n    public String testOauth() {\n        return "oauth";\n    }\n\n    @GetMapping("user")\n    public Principal currentUser(Principal principal) {\n        return principal;\n    }\n\n    @DeleteMapping("signout")\n    public FebsResponse signout(HttpServletRequest request) throws FebsAuthException {\n        String authorization = request.getHeader("Authorization");\n        String token = StringUtils.replace(authorization, "bearer ", "");\n        FebsResponse febsResponse = new FebsResponse();\n        if (!consumerTokenServices.revokeToken(token)) {\n            throw new FebsAuthException("退出登录失败");\n        }\n        return febsResponse.message("退出登录成功");\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br")])]),s("p",[e._v("其中"),s("code",[e._v("currentUser")]),e._v("用户获取当前登录用户，"),s("code",[e._v("signout")]),e._v("方法通过"),s("code",[e._v("ConsumerTokenServices")]),e._v("来注销当前Token。"),s("code",[e._v("FebsResponse")]),e._v("为系统的统一相应格式，我们在febs-common模块中定义它，在febs-common模块的cc.mrbird.febs.common.entity路径下新增"),s("code",[e._v("FebsResponse")]),e._v("类：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('public class FebsResponse extends HashMap<String, Object> {\n\n    private static final long serialVersionUID = -8713837118340960775L;\n\n    public FebsResponse message(String message) {\n        this.put("message", message);\n        return this;\n    }\n\n    public FebsResponse data(Object data) {\n        this.put("data", data);\n        return this;\n    }\n\n    @Override\n    public FebsResponse put(String key, Object value) {\n        super.put(key, value);\n        return this;\n    }\n\n    public String getMessage() {\n        return String.valueOf(get("message"));\n    }\n\n    public Object getData() {\n        return get("data");\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br")])]),s("p",[s("code",[e._v("FebsAuthException")]),e._v("为自定义异常，在febs-common模块cc.mrbird.febs.common路径下新增exception包，然后在该包下新增"),s("code",[e._v("FebsAuthException")]),e._v("：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public class FebsAuthException  extends Exception{\n\n    private static final long serialVersionUID = -6916154462432027437L;\n\n    public FebsAuthException(String message){\n        super(message);\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("h2",{attrs:{id:"postman测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postman测试"}},[e._v("#")]),e._v(" PostMan测试")]),e._v(" "),s("p",[e._v("至此认证服务器编写得差不多了，接下来使用PostMan测试可用性。")]),e._v(" "),s("p",[e._v("在启动系统之前，我们在febs-auth模块的resources目录下新增一个banner.txt文件：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("|------------------------------|\n|    ____  ____  ___   __      |\n|   | |_  | |_  | |_) ( (`     |\n|   |_|   |_|__ |_|_) _)_)     |\n|                              |\n|   ${spring.application.name}                  |\n|   Spring-Boot: ${spring-boot.version} |\n|------------------------------|\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[e._v("由于febs-auth需要Redis服务，所以需要先启动Redis服务。Windows版Redis的下载地址为 https://github.com/MicrosoftArchive/redis/releases，Redis 支持 32 位和 64 位。这个需要根据你系统平台的实际情况选择，这里我们下载 Redis-x64-xxx.zip压缩包，解压后双击redis-server.exe启动即可。")]),e._v(" "),s("h3",{attrs:{id:"测试令牌获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试令牌获取"}},[e._v("#")]),e._v(" 测试令牌获取")]),e._v(" "),s("p",[e._v("当启动类较多的时候，可以通过IDEA的Services窗口来启动：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/eWWOCn.png",alt:"23.png"}})]),e._v(" "),s("p",[e._v("我们先运行FebsRegisterApplication，然后再运行FebsAuthApplication，因为我们还没有搭建微服务网关模块，所以这里就直接访问8101端口进行测试了。")]),e._v(" "),s("p",[e._v("使用PostMan发送 "),s("a",{attrs:{href:"localhost:8101/oauth/token"}},[e._v("localhost:8101/oauth/token")]),e._v(" POST请求，请求参数如下所示：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/eWvrWV.png",alt:"24.png"}})]),e._v(" "),s("p",[e._v("grant_type填password，表示密码模式，然后填写用户名和密码，根据我们定义的"),s("code",[e._v("FebsUserDetailService")]),e._v("逻辑，这里用户名随便填，密码必须为123456。")]),e._v(" "),s("p",[e._v("除了这几个参数外，我们需要在请求头中配置"),s("code",[e._v("Authorization")]),e._v("信息，否则请求将返回401：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/eWvOwd.png",alt:"25.png"}})]),e._v(" "),s("p",[e._v("值为Basic加空格加"),s("code",[e._v("client_id:client_secret")]),e._v("（就是在"),s("code",[e._v("FebsAuthorizationServerConfigure")]),e._v("类"),s("code",[e._v("configure(ClientDetailsServiceConfigurer clients)")]),e._v("方法中定义的client和secret）经过base64加密后的值（可以使用http://tool.oschina.net/encrypt?type=3）:")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/eWxGkR.png",alt:"26.png"}})]),e._v(" "),s("p",[e._v("点击Send按钮，返回：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n    "access_token": "d10c0036-25b6-4c93-8376-d6c86dd91146",\n    "token_type": "bearer",\n    "refresh_token": "1b08e7ac-66d9-4f0d-ab1d-86632a29958f",\n    "expires_in": 86399,\n    "scope": "all"\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("p",[e._v("有效时长就是我们在"),s("code",[e._v("FebsAuthorizationServerConfigure")]),e._v("的"),s("code",[e._v("defaultTokenServices")]),e._v("方法中定义的"),s("code",[e._v("60 * 60 * 24")]),e._v("秒。")]),e._v(" "),s("p",[e._v("查看Redis，看看令牌是否已经存储到了Redis：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/eWzjRP.png",alt:"28.png"}})]),e._v(" "),s("p",[e._v("可能有人会问，上面的教程中并没有看到febs-auth模块中有和"),s("code",[e._v("/oauth/token")]),e._v("请求对应的方法呀，为什么可以直接访问？")]),e._v(" "),s("p",[e._v("这是因为当我们引入了"),s("code",[e._v("spring-cloud-starter-oauth2")]),e._v("依赖后，系统会暴露一组由"),s("code",[e._v("/oauth")]),e._v("开头的端点，这些端点用于处理令牌相关请求，可以通过IDEA的Mappings证实这一点：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/11/30/QV9agH.png",alt:"400.png"}})]),e._v(" "),s("h3",{attrs:{id:"获取受保护资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取受保护资源"}},[e._v("#")]),e._v(" 获取受保护资源")]),e._v(" "),s("p",[e._v("我们已经成功获取了访问令牌access_token，接下来使用这个令牌去获取"),s("code",[e._v("/user")]),e._v("资源。")]),e._v(" "),s("p",[e._v("使用PostMan发送 "),s("a",{attrs:{href:"localhost:8101/user"}},[e._v("localhost:8101/user")]),e._v(" GET请求，先不带令牌看看返回什么：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/eWz4xK.png",alt:"27.png"}})]),e._v(" "),s("p",[e._v("返回401异常，我们在请求头中添加如下内容：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/efSaee.png",alt:"29.png"}})]),e._v(" "),s("p",[e._v("可以看到已经成功返回了数据。Authorization值的格式为"),s("code",[e._v("token_type access_token")]),e._v("。")]),e._v(" "),s("p",[e._v("接着我们使用PostMan发送 "),s("a",{attrs:{href:"localhost:8101/oauth/test"}},[e._v("localhost:8101/oauth/test")]),e._v(" GET请求：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/efpVkd.png",alt:"30.png"}})]),e._v(" "),s("p",[e._v("可以看到，虽然我们在请求头中已经带上了正确的令牌，但是并没有成功获取到资源，正如前面所说的那样，"),s("code",[e._v("/oauth/")]),e._v("开头的请求由"),s("code",[e._v("FebsSecurityConfigure")]),e._v("定义的过滤器链处理，它不受资源服务器配置管理，所以使用令牌并不能成功获取到资源。")]),e._v(" "),s("h3",{attrs:{id:"测试注销令牌"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试注销令牌"}},[e._v("#")]),e._v(" 测试注销令牌")]),e._v(" "),s("p",[e._v("使用PostMan发送 "),s("a",{attrs:{href:"localhost:8101/signout"}},[e._v("localhost:8101/signout")]),e._v(" DELETE请求，并在请求头中携带令牌：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/ef9MCR.png",alt:"31.png"}})]),e._v(" "),s("p",[e._v("注销令牌后，原先的access_token和refresh_token都会马上失效，并且Redis也被清空：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/ef9rKf.png",alt:"32.png"}})]),e._v(" "),s("h3",{attrs:{id:"测试令牌刷新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试令牌刷新"}},[e._v("#")]),e._v(" 测试令牌刷新")]),e._v(" "),s("p",[e._v("因为我们上面注销了令牌，所以在此之前再次获取一次令牌：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/efCpqO.png",alt:"33.png"}})]),e._v(" "),s("p",[e._v("然后使用refresh_token去换取新的令牌，使用PostMan发送 "),s("a",{attrs:{href:"localhost:8101/oauth/token"}},[e._v("localhost:8101/oauth/token")]),e._v(" POST请求，请求参数如下：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://s2.ax1x.com/2019/08/06/efCNLT.png",alt:"34.png"}})]),e._v(" "),s("p",[e._v("可以看到，成功获取到了新的令牌。")]),e._v(" "),s("p",[e._v("到这里微服务认证系统febs-auth已经搭建完毕，因为这个模块比较重要，所以花了较长的篇幅来介绍，下一节中我们开始搭建微服务网关。")])])}),[],!1,null,null,null);s.default=r.exports}}]);