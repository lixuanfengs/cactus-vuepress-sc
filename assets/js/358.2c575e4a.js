(window.webpackJsonp=window.webpackJsonp||[]).push([[358],{709:function(s,e,n){"use strict";n.r(e);var a=n(0),t=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("在第三章的3.1小节中，我们在t_menu表里插入了一些菜单数据，其中用户管理菜单下包含“新增用户”，“修改用户”和“删除用户”三个按钮，对应的权限为"),e("code",[s._v("user:add")]),s._v("、"),e("code",[s._v("user:upate")]),s._v("和"),e("code",[s._v("user:delete")]),s._v("。在前端用户管理模块页面上，只有当用户拥有相应的权限时，对应的按钮才会被渲染到页面上。比如，当用户拥有"),e("code",[s._v("user:add")]),s._v("权限时，新增用户按钮会被渲染并显示。")]),s._v(" "),e("p",[s._v("我们知道，当用户登录成功后后，我们将PERMISSIONS信息存储到了Vuex中，所以我们可以顺利的获取到用户的权限标识。要实现上面的功能，比较土的做法是在页面上通过JS代码判断用户是拥有相应按钮的权限，有的话显示按钮DOM，没有的话隐藏。庆幸的是，Vue支持自定义指令，所以我们可以自定义权限指令来优雅地实现上面的需求。")]),s._v(" "),e("p",[s._v("关于如何自定义Vue指令，可以参考Vue的官方文档：https://cn.vuejs.org/v2/guide/custom-directive.html。")]),s._v(" "),e("p",[s._v("在FEBS Cloud Web的src/utils/permissionDirect.js里，我们定义了权限Vue指令，以"),e("code",[s._v("hasPermission")]),s._v("为例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("export const hasPermission = {\n  install(Vue) {\n    Vue.directive('hasPermission', {\n      bind(el, binding, vnode) {\n        const permissions = vnode.context.$store.state.account.permissions\n        const value = binding.value\n        let flag = true\n        for (const v of value) {\n          if (!permissions.includes(v)) {\n            flag = false\n          }\n        }\n        if (!flag) {\n          if (!el.parentNode) {\n            el.style.display = 'none'\n          } else {\n            el.parentNode.removeChild(el)\n          }\n        }\n      }\n    })\n  }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[s._v("其中"),e("code",[s._v("vnode.context.$store.state.account.permissions")]),s._v("这段代码可以从Vuex中获取我们存储的PERMISSIONS信息，"),e("code",[s._v("const value = binding.value")]),s._v("表示我们在使用指令的时候指定的内容。接着的逻辑就是遍历permissions，判断是否包含我们指定的内容，有的话说明用户包含该权限，于是渲染该组件；没有的话不进行渲染（移除或者隐藏）。")]),s._v(" "),e("p",[s._v("该指令在页面的使用方式为：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<button v-has-permission=\"['user:add']\">新增用户</button>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("效果是，只有用户拥有"),e("code",[s._v("user:add")]),s._v("权限时，新增用户按钮才会渲染。")])])}),[],!1,null,null,null);e.default=t.exports}}]);