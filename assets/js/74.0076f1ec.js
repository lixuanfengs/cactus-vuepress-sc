(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{423:function(t,a,e){"use strict";e.r(a);var s=e(0),i=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("创建大局域网是一件非常重要的事情。一旦有了安全的局域网环境之后，我的服务器之间就可以使用私有IP进行通信，不用再考虑这个协议是否适合暴露在公网上、是否会被MITM（中间人攻击）等问题了。总的来说，使用"),a("code",[t._v("Cloudflare Zero Trust")]),t._v("创建局域网可以提供强大的网络安全保护，减少数据泄露风险，简化网络管理，并支持远程办公。它是一种现代化的安全框架，有助于保护企业的网络资源和敏感信息。")]),t._v(" "),a("p",[t._v("一般我是"),a("a",{attrs:{href:"https://nova.moe/deploy-wireguard-on-ubuntu-bionic/",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用WireGuard来创建内网"),a("OutboundLink")],1),t._v("。选择一个机器作为“服务器”，其他的节点作为客户端加进来就好了。")]),t._v(" "),a("ul",[a("li",[t._v("如何暴露整个家庭内网，如"),a("code",[t._v("192.168.7.0/24")]),t._v(" 给出门在外的我，家里的每一个设备都要通过WireGuard加进来吗，或者写奇奇怪怪的iptables规则？")]),t._v(" "),a("li",[t._v("所有的数据要通过“服务器”中转，两个美国的服务器明明直接就能沟通，50ms解决，如果WG服务器在亚洲，那么就基本上300ms左右了")]),t._v(" "),a("li",[t._v("穷到买不起服务器，没有公网IP")])]),t._v(" "),a("p",[t._v("在这种情况下，最好的办法就是用 "),a("code",[t._v("Cloudflare Zero Trust")]),t._v(" 中的"),a("code",[t._v("tunnel")]),t._v("来解决以上问题！")]),t._v(" "),a("p",[t._v("之前我已经把所有本地"),a("code",[t._v("web")]),t._v(" 服务都通过 "),a("code",[t._v("argo tunnel")]),t._v(" 暴漏了，拓扑图如下图所示，从官网上拿出来的图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/handshake-dc58ec8d.jpg",alt:"img"}})]),t._v(" "),a("p",[t._v("在我们的本地服务器上安装"),a("code",[t._v("cloudflared")]),t._v("，然后添加 "),a("code",[t._v("Public Hostname")]),t._v(" ，所有的访问直接从 "),a("code",[t._v("Cloudflare")]),t._v(" 的网络来。可以保证网络的安全！")]),t._v(" "),a("p",[t._v("除此之外"),a("code",[t._v("Cloudflare tunnel")]),t._v(" 还有那些有趣的用法呢？比如：专用网络的构建（暴漏本地内网）。")]),t._v(" "),a("p",[t._v("构建有两个主要组件：基础结构端和客户端。")]),t._v(" "),a("p",[t._v("基础设施端由 Cloudflare 隧道提供支持，它将您的基础设施连接到 Cloudflare - 无论是单个应用程序、多个应用程序还是整个网段。这是通过在您的环境中运行以建立多个安全的、仅出站的、负载平衡的 Cloudflare 链接来实现的。"),a("code",[t._v("cloudflared")])]),t._v(" "),a("p",[t._v("在客户端，您的最终用户需要能够轻松连接到 Cloudflare，更重要的是，连接到您的网络。此连接由 Cloudflare WARP 处理。此客户端可以使用您的内部 MDM 工具在短短几分钟内推广到您的整个组织，并建立从用户设备到 Cloudflare 网络的安全连接。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/private-ips-diagram-a970f28f.png",alt:"img"}})]),t._v(" "),a("p",[t._v("**专用网络的构建 **（暴漏本地内网）")]),t._v(" "),a("h2",{attrs:{id:"获取-team-domain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-team-domain"}},[t._v("#")]),t._v(" 获取 team domain")]),t._v(" "),a("p",[t._v("登录 "),a("code",[t._v("Cloudflare")]),t._v(" 首先打开菜单  "),a("code",[t._v("Zero Trust")]),t._v(" ，在设置里就可以看到你的 "),a("code",[t._v("team name")]),t._v(" ，我这里就是"),a("code",[t._v("cactusli")]),t._v("!")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526101538947.png",alt:"image-20230526101538947"}})]),t._v(" "),a("h2",{attrs:{id:"配置网络协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置网络协议"}},[t._v("#")]),t._v(" 配置网络协议")]),t._v(" "),a("p",[t._v("打开菜单 Settings 里的 network，在找到proxy，把TCP、UDP、ICMP和WARP to WARP都打开（这个后续要用）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526102105173.png",alt:"image-20230526102105173"}})]),t._v(" "),a("h2",{attrs:{id:"创建warp-设备注册权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建warp-设备注册权限"}},[t._v("#")]),t._v(" 创建WARP 设备注册权限")]),t._v(" "),a("p",[t._v("首先要定义如何注册设备，可以通过邮箱来定义注册。比如说一个公司的人，用公司后缀的邮箱连接到同一个内网。在Zero Trust的面板中，Settings - WARP client -  Dvice enrollment permission 。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526102603463.png",alt:"image-20230526102603463"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526102740359.png",alt:"image-20230526102740359"}})]),t._v(" "),a("h2",{attrs:{id:"创建-warp-profile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-warp-profile"}},[t._v("#")]),t._v(" 创建 WARP Profile")]),t._v(" "),a("p",[t._v("什么是 Profile ？，就是定义什么用户该使用什么样的 WARP 的规则，规则包括用户能否断开，自动重连等，其中最重要的是路由规则。")]),t._v(" "),a("p",[t._v("如图所示，我配置的是 "),a("code",[t._v("1183895890@qq.com")]),t._v("  这个用户的规则")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526103156964.png",alt:"image-20230526103156964"}})]),t._v(" "),a("p",[t._v("先创建 Profile 就可以修改 "),a("code",[t._v("Split tunnel")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Split tunnel")]),t._v("  用来配置如何分发流量，分为两种模式，"),a("strong",[t._v("include和exclude")]),t._v("，有点像黑名单白名单的概念。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526103408921.png",alt:"image-20230526103408921"}})]),t._v(" "),a("ul",[a("li",[t._v("Include，就像 WireGuard "),a("code",[t._v("allowIP")]),t._v(" 配置为 "),a("code",[t._v("192.168.1.0/24")]),t._v("一样，只有这个网段的流量会走WireGuard，其他流量会直接出去，不走cloudflare")]),t._v(" "),a("li",[t._v("Exclude，就是所有流量都要走cloudflare，因此"),a("code",[t._v("192.168.1.0/24")]),t._v("走了cloudflare所以可以访问，列表中的直接连接")])]),t._v(" "),a("p",[t._v("再详细详细解释下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("比如你在外面，要访问家里的"),a("code",[t._v("192.168.1.0/24")]),t._v("，并且"),a("strong",[t._v("所有其他流量要走cloudflare")]),t._v("，那么你要用exclude模式.")])]),t._v(" "),a("li",[a("p",[t._v("比如你在外面，要访问家里的"),a("code",[t._v("192.168.1.0/24")]),t._v("，"),a("strong",[t._v("其他流量直接出")]),t._v(" ，那么就要用include模式。")])])]),t._v(" "),a("p",[t._v("这里我就选择include模式，因此上图切换到 include，然后添加IP段，CIDR表示法")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526105637048.png",alt:"image-20230526105637048"}})]),t._v(" "),a("p",[t._v("同时在 Access 菜单下的tunnels 找到对应的 tunnel 修改或点击 Private Network 创建一样的CIDR")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526110831960.png",alt:"image-20230526110831960"}})]),t._v(" "),a("p",[t._v("看cloudflared日志可以看到已经自动更新了配置")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526111236873.png",alt:"image-20230526111236873"}})]),t._v(" "),a("h2",{attrs:{id:"配置客户端连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置客户端连接"}},[t._v("#")]),t._v(" 配置客户端连接")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/1685093133588.jpg",alt:"1685093133588"}})]),t._v(" "),a("p",[t._v("进行邮件验证")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526172649179.png",alt:"image-20230526172649179"}})]),t._v(" "),a("p",[t._v("然后你的warp就会接收到新的配置，连接起来，就会发现"),a("code",[t._v("192.168.1.0/24")]),t._v("已经通了")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526173037855.png",alt:"image-20230526173037855"}})]),t._v(" "),a("p",[t._v("连接成功后打开内网的任何一个web服务")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://lixuanfengs.github.io/blog-images/cactus-blogs/image-20230526173218803.png",alt:"image-20230526173218803"}})])])}),[],!1,null,null,null);a.default=i.exports}}]);